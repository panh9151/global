{"version":3,"sources":["../src/index.ts","../package.json","../src/create-app.ts","../src/utils/index.ts","../template/index.ts"],"sourcesContent":["#!/usr/bin/env node\r\n\r\nimport pc from \"picocolors\";\r\nimport { Command } from \"commander\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport prompts from \"prompts\";\r\nimport packageJson from \"../package.json\";\r\nimport { createApp } from \"./create-app\";\r\nimport {\r\n  __root,\r\n  checkGitStatus,\r\n  getPackageManager,\r\n  isFolderEmpty,\r\n  isInGitRepository,\r\n  validateNpmName,\r\n} from \"./utils\";\r\nimport { execa } from \"execa\";\r\nimport ora from \"ora\";\r\n\r\nlet projectPath: string = \"\";\r\n\r\nconst handleSigTerm = () => process.exit(0);\r\n\r\nprocess.on(\"SIGINT\", handleSigTerm);\r\nprocess.on(\"SIGTERM\", handleSigTerm);\r\n\r\nconst onPromptState = (state: any) => {\r\n  if (state.aborted) {\r\n    // If we don't re-enable the terminal cursor before exiting\r\n    // the program, the cursor will remain hidden\r\n    process.stdout.write(\"\\x1B[?25h\");\r\n    process.stdout.write(\"\\n\");\r\n    process.exit(1);\r\n  }\r\n};\r\n\r\nconst program = new Command()\r\n  .name(packageJson.name)\r\n  .description(packageJson.description)\r\n  .version(\r\n    packageJson.version || \"1.0.0\",\r\n    \"-v, --version\",\r\n    \"display the version number\",\r\n  )\r\n  .arguments(\"[project-directory]\")\r\n  .usage(`${pc.green(\"[project-directory]\")} [options]`)\r\n  .action((name) => {\r\n    projectPath = name;\r\n  })\r\n  .option(\"-t, --template <template>\", `select template`)\r\n  .option(\r\n    \"--use-npm\",\r\n    `\r\n\r\n  Explicitly tell the CLI to bootstrap the application using npm\r\n`,\r\n  )\r\n  .option(\r\n    \"--use-pnpm\",\r\n    `\r\n\r\n  Explicitly tell the CLI to bootstrap the application using pnpm\r\n`,\r\n  )\r\n  .option(\r\n    \"--use-yarn\",\r\n    `\r\n\r\n  Explicitly tell the CLI to bootstrap the application using Yarn\r\n`,\r\n  )\r\n  .parse(process.argv);\r\n\r\nasync function reRun() {\r\n  const userArgs = process.argv.slice(2);\r\n  try {\r\n    await execa(\"create-agl-template\", userArgs, {\r\n      stdin: \"inherit\",\r\n      stdout: \"inherit\",\r\n    });\r\n    process.exit();\r\n  } catch (e: any) {\r\n    if (e.exitCode === 1) {\r\n      process.exit(1);\r\n    } else {\r\n      ora().fail(\"Re-running script failed!\");\r\n      console.log();\r\n      console.log(e.message);\r\n      console.log();\r\n    }\r\n  }\r\n}\r\n\r\nasync function isNeededUpdate() {\r\n  const gitStatus = await checkGitStatus();\r\n  if (gitStatus !== \"need-to-pull\") return;\r\n\r\n  console.log(\r\n    pc.yellow(\"A new version of `create-agl-template` is available!\"),\r\n  );\r\n  const cwd = __root;\r\n\r\n  try {\r\n    console.log();\r\n    console.log(pc.yellow(\"Full Changelog:\"));\r\n    await execa(\"git\", [\"log\", \"..@{u}\", \"--oneline\"], { stdio: \"inherit\", cwd });\r\n    console.log();\r\n  } catch (e) {}\r\n\r\n  const res = await prompts({\r\n    onState: onPromptState,\r\n    type: \"confirm\",\r\n    name: \"update\",\r\n    message: \"Update new version and continue?\",\r\n  });\r\n  if (!res.update) return;\r\n\r\n  const spinner = ora(\"Updating new version\").start();\r\n  try {\r\n    await execa(\"git\", [\"pull\"], { cwd });\r\n    await execa(\"npm\", [\"run\", \"install:global\"], { cwd });\r\n    spinner.succeed(\"Update successful\");\r\n    await reRun();\r\n  } catch (e: any) {\r\n    spinner.fail(\"Update failed!\");\r\n    console.log();\r\n    console.log(e.message);\r\n    console.log();\r\n  }\r\n}\r\n\r\nasync function run(): Promise<void> {\r\n  if (isInGitRepository(__root)) {\r\n    await isNeededUpdate();\r\n    execa(\"git\", [\"fetch\"], {\r\n      cwd: __root,\r\n    });\r\n  }\r\n\r\n  if (typeof projectPath === \"string\") {\r\n    projectPath = projectPath.trim();\r\n  }\r\n\r\n  if (!projectPath) {\r\n    const res = await prompts({\r\n      onState: onPromptState,\r\n      type: \"text\",\r\n      name: \"path\",\r\n      message: \"What is your project named?\",\r\n      initial: \"my-app\",\r\n      validate: (name) => {\r\n        const validation = validateNpmName(path.basename(path.resolve(name)));\r\n        if (validation.valid) {\r\n          return true;\r\n        }\r\n        return \"Invalid project name: \" + validation.problems![0];\r\n      },\r\n    });\r\n\r\n    if (typeof res.path === \"string\") {\r\n      projectPath = res.path.trim();\r\n    }\r\n  }\r\n\r\n  if (!projectPath) {\r\n    console.log(\r\n      \"\\nPlease specify the project directory:\\n\" +\r\n        `  ${pc.cyan(program.name())} ${pc.green(\"<project-directory>\")}\\n` +\r\n        \"For example:\\n\" +\r\n        `  ${pc.cyan(program.name())} ${pc.green(\"my-next-app\")}\\n\\n` +\r\n        `Run ${pc.cyan(`${program.name()} --help`)} to see all options.`,\r\n    );\r\n    process.exit(1);\r\n  }\r\n\r\n  const root = path.resolve(projectPath);\r\n  const projectName = path.basename(root);\r\n\r\n  const { valid, problems } = validateNpmName(projectName);\r\n  if (!valid) {\r\n    console.error(\r\n      `Could not create a project called ${pc.red(\r\n        `\"${projectName}\"`,\r\n      )} because of npm naming restrictions:`,\r\n    );\r\n\r\n    problems!.forEach((p) => console.error(`    ${pc.red(pc.bold(\"*\"))} ${p}`));\r\n    process.exit(1);\r\n  }\r\n\r\n  /**\r\n   * Verify the project dir is empty or doesn't exist\r\n   */\r\n  const folderExists = fs.existsSync(root);\r\n\r\n  if (folderExists && !isFolderEmpty(root, projectName)) {\r\n    process.exit(1);\r\n  }\r\n\r\n  const options = program.opts();\r\n  const argTemplate = options.template || options.t;\r\n\r\n  type ColorFunc = (input: string | number | null | undefined) => string;\r\n  interface Template {\r\n    name: string;\r\n    display: string;\r\n    color: ColorFunc;\r\n  }\r\n  const TEMPLATES: Template[] = [\r\n    {\r\n      name: \"ejs\",\r\n      display: \"EJS\",\r\n      color: pc.magenta,\r\n    },\r\n    {\r\n      name: \"twig\",\r\n      display: \"Twig\",\r\n      color: pc.green,\r\n    },\r\n    {\r\n      name: \"default\",\r\n      display: \"Default\",\r\n      color: pc.gray,\r\n    },\r\n  ];\r\n\r\n  let result: prompts.Answers<\"template\">;\r\n\r\n  try {\r\n    const isValidTemplate = TEMPLATES.find((t) => t.name === argTemplate);\r\n\r\n    result = await prompts(\r\n      [\r\n        {\r\n          type: argTemplate && isValidTemplate ? null : \"select\",\r\n          name: \"template\",\r\n          message:\r\n            typeof argTemplate === \"string\" && !isValidTemplate\r\n              ? pc.reset(\r\n                  `\"${argTemplate}\" isn't a valid template. Please choose from below: `,\r\n                )\r\n              : pc.reset(\"Select a template:\"),\r\n          initial: 0,\r\n          choices: TEMPLATES.map((framework) => {\r\n            const frameworkColor = framework.color;\r\n            return {\r\n              title: frameworkColor(framework.display || framework.name),\r\n              value: framework,\r\n            };\r\n          }),\r\n        },\r\n      ],\r\n      {\r\n        onCancel: () => {\r\n          throw new Error(pc.red(\"âœ–\") + \" Operation cancelled\");\r\n        },\r\n      },\r\n    );\r\n  } catch (cancelled: any) {\r\n    console.log(cancelled.message);\r\n    return;\r\n  }\r\n\r\n  const { template } = result;\r\n  let selectedTemplate = template?.name || argTemplate;\r\n\r\n  const packageManager = !!options.useNpm\r\n    ? \"npm\"\r\n    : !!options.usePnpm\r\n      ? \"pnpm\"\r\n      : !!options.useYarn\r\n        ? \"yarn\"\r\n        : getPackageManager();\r\n\r\n  createApp({\r\n    root,\r\n    packageManager,\r\n    template: selectedTemplate,\r\n  });\r\n}\r\n\r\nrun();\r\n","{\r\n  \"name\": \"create-agl-template\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Create front end template with one command\",\r\n  \"type\": \"module\",\r\n  \"license\": \"ISC\",\r\n  \"author\": \"Dong Nguyen\",\r\n  \"bin\": \"./dist/index.js\",\r\n  \"files\": [\r\n    \"dist\"\r\n  ],\r\n  \"scripts\": {\r\n    \"dev\": \"tsup --watch\",\r\n    \"build\": \"tsup\",\r\n    \"typecheck\": \"tsc --noEmit\",\r\n    \"clean\": \"rimraf dist\",\r\n    \"clean:app\": \"rimraf my-app\",\r\n    \"start\": \"node dist/index.js\",\r\n    \"start:app\": \"rimraf my-app && node dist/index.js my-app\",\r\n    \"install:global\": \"npm install && npm run build && npm install -g\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/allgrow-labo/create-agl-template\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/node\": \"^20.2.5\",\r\n    \"@types/prompts\": \"^2.4.7\",\r\n    \"@types/validate-npm-package-name\": \"^4.0.1\",\r\n    \"rimraf\": \"^5.0.1\",\r\n    \"tsup\": \"^6.7.0\",\r\n    \"typescript\": \"^5.1.3\"\r\n  },\r\n  \"dependencies\": {\r\n    \"commander\": \"^10.0.1\",\r\n    \"cross-env\": \"^7.0.3\",\r\n    \"execa\": \"^7.1.1\",\r\n    \"fast-glob\": \"^3.3.1\",\r\n    \"ora\": \"^7.0.1\",\r\n    \"picocolors\": \"^1.0.0\",\r\n    \"prompts\": \"^2.4.2\",\r\n    \"validate-npm-package-name\": \"^5.0.0\"\r\n  }\r\n}\r\n","import path from \"path\";\r\nimport pc from \"picocolors\";\r\nimport {\r\n  PackageManager,\r\n  isFolderEmpty,\r\n  isWriteable,\r\n  makeDir,\r\n  tryGitInit,\r\n} from \"./utils\";\r\nimport { installTemplate } from \"../template\";\r\n\r\nexport async function createApp({\r\n  root,\r\n  packageManager,\r\n  template,\r\n}: {\r\n  root: string;\r\n  packageManager: PackageManager;\r\n  template: string;\r\n}) {\r\n  const appName = path.basename(root);\r\n\r\n  if (!(await isWriteable(path.dirname(root)))) {\r\n    console.error(\r\n      \"The application path is not writable, please check folder permissions and try again.\"\r\n    );\r\n    console.error(\r\n      \"It is likely you do not have write permissions for this folder.\"\r\n    );\r\n    process.exit(1);\r\n  }\r\n\r\n  await makeDir(root);\r\n  if (!isFolderEmpty(root, appName)) {\r\n    process.exit(1);\r\n  }\r\n\r\n  const originalDirectory = process.cwd();\r\n\r\n  const useYarn = packageManager === \"yarn\";\r\n\r\n  console.log(`Creating a new template in ${pc.green(root)}.`);\r\n  console.log();\r\n\r\n  process.chdir(root);\r\n\r\n  try {\r\n    await installTemplate({\r\n      appName,\r\n      root,\r\n      template,\r\n      packageManager,\r\n    });\r\n\r\n    if (tryGitInit(root)) {\r\n      console.log(\"Initialized a git repository.\");\r\n    }\r\n\r\n    console.log();\r\n    console.log(`${pc.green(\"Success!\")} Created ${appName} at ${root}`);\r\n\r\n    let cdpath: string;\r\n    if (path.join(originalDirectory, appName) === root) {\r\n      cdpath = appName;\r\n    } else {\r\n      cdpath = root;\r\n    }\r\n    console.log(\"Inside that directory, you can run several commands:\");\r\n    console.log();\r\n    console.log(pc.cyan(`  ${packageManager} ${useYarn ? \"\" : \"run \"}dev`));\r\n    console.log(\"    Starts the development server.\");\r\n    console.log();\r\n    console.log(pc.cyan(`  ${packageManager} ${useYarn ? \"\" : \"run \"}build`));\r\n    console.log(\"    Builds the app for production.\");\r\n    console.log();\r\n    console.log(pc.cyan(`  ${packageManager} ${useYarn ? \"\" : \"run \"}preview`));\r\n    console.log(\"    Runs the built app in preview mode.\");\r\n    console.log();\r\n    console.log(\"We suggest that you begin by typing:\");\r\n    console.log();\r\n    console.log(pc.cyan(\"  cd\"), cdpath);\r\n    console.log(\r\n      `  ${pc.cyan(`${packageManager} ${useYarn ? \"\" : \"run \"}dev`)}`\r\n    );\r\n    console.log();\r\n  } catch (error) {\r\n    function isErrorLike(err: unknown): err is { message: string } {\r\n      return (\r\n        typeof err === \"object\" &&\r\n        err !== null &&\r\n        typeof (err as { message?: unknown }).message === \"string\"\r\n      );\r\n    }\r\n    throw new Error(isErrorLike(error) ? error.message : error + \"\");\r\n  }\r\n}\r\n","import fg from \"fast-glob\";\r\nimport pc from \"picocolors\";\r\nimport { execSync } from \"child_process\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport validateProjectName from \"validate-npm-package-name\";\r\nimport { execa } from \"execa\";\r\nimport { fileURLToPath } from \"url\";\r\n\r\nexport type PackageManager = \"npm\" | \"pnpm\" | \"yarn\";\r\n\r\nexport const __dirname = path.dirname(fileURLToPath(import.meta.url));\r\n\r\nexport const __root = path.join(__dirname, \"..\");\r\n\r\nexport async function isWriteable(directory: string): Promise<boolean> {\r\n  try {\r\n    await fs.promises.access(directory, (fs.constants || fs).W_OK);\r\n    return true;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function makeDir(\r\n  root: string,\r\n  options = { recursive: true },\r\n): Promise<string | undefined> {\r\n  return fs.promises.mkdir(root, options);\r\n}\r\n\r\ninterface CopyOption {\r\n  cwd?: string;\r\n  rename?: (basename: string) => string;\r\n  parents?: boolean;\r\n}\r\nexport const copy = async (\r\n  src: string | string[],\r\n  dest: string,\r\n  { cwd, rename = (x: string) => x, parents = true }: CopyOption = {},\r\n) => {\r\n  const source = typeof src === \"string\" ? [src] : src;\r\n\r\n  if (source.length === 0 || !dest) {\r\n    throw new TypeError(\"`src` and `dest` are required\");\r\n  }\r\n\r\n  const gitignore = cwd\r\n    ? fs.readFileSync(path.join(cwd, `.gitignore`), \"utf-8\")\r\n    : \"\";\r\n  const ignore = gitignore.split(\"\\n\");\r\n\r\n  const sourceFiles = await fg.async(source, {\r\n    cwd,\r\n    dot: true,\r\n    absolute: false,\r\n    stats: false,\r\n    ignore,\r\n  });\r\n\r\n  const destRelativeToCwd = cwd ? path.resolve(cwd, dest) : dest;\r\n\r\n  return Promise.all(\r\n    sourceFiles.map(async (p) => {\r\n      const dirname = path.dirname(p);\r\n      const basename = rename(path.basename(p));\r\n\r\n      const from = cwd ? path.resolve(cwd, p) : p;\r\n      const to = parents\r\n        ? path.join(destRelativeToCwd, dirname, basename)\r\n        : path.join(destRelativeToCwd, basename);\r\n\r\n      // Ensure the destination directory exists\r\n      await fs.promises.mkdir(path.dirname(to), { recursive: true });\r\n\r\n      return fs.promises.copyFile(from, to);\r\n    }),\r\n  );\r\n};\r\n\r\nexport function isFolderEmpty(root: string, name: string): boolean {\r\n  const validFiles = [\r\n    \".DS_Store\",\r\n    \".git\",\r\n    \".gitattributes\",\r\n    \".gitignore\",\r\n    \".gitlab-ci.yml\",\r\n    \".hg\",\r\n    \".hgcheck\",\r\n    \".hgignore\",\r\n    \".idea\",\r\n    \".npmignore\",\r\n    \".travis.yml\",\r\n    \"LICENSE\",\r\n    \"Thumbs.db\",\r\n    \"docs\",\r\n    \"mkdocs.yml\",\r\n    \"npm-debug.log\",\r\n    \"yarn-debug.log\",\r\n    \"yarn-error.log\",\r\n    \"yarnrc.yml\",\r\n    \".yarn\",\r\n  ];\r\n\r\n  const conflicts = fs\r\n    .readdirSync(root)\r\n    .filter((file) => !validFiles.includes(file))\r\n    // Support IntelliJ IDEA-based editors\r\n    .filter((file) => !/\\.iml$/.test(file));\r\n\r\n  if (conflicts.length > 0) {\r\n    console.log(\r\n      `The directory ${pc.green(name)} contains files that could conflict:`,\r\n    );\r\n    console.log();\r\n    for (const file of conflicts) {\r\n      try {\r\n        const stats = fs.lstatSync(path.join(root, file));\r\n        if (stats.isDirectory()) {\r\n          console.log(`  ${pc.blue(file)}/`);\r\n        } else {\r\n          console.log(`  ${file}`);\r\n        }\r\n      } catch {\r\n        console.log(`  ${file}`);\r\n      }\r\n    }\r\n    console.log();\r\n    console.log(\r\n      \"Either try using a new directory name, or remove the files listed above.\",\r\n    );\r\n    console.log();\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function getPackageManager(): PackageManager {\r\n  const userAgent = process.env.npm_config_user_agent;\r\n\r\n  if (!userAgent) {\r\n    return \"npm\";\r\n  }\r\n\r\n  if (userAgent.startsWith(\"yarn\")) {\r\n    return \"yarn\";\r\n  }\r\n\r\n  if (userAgent.startsWith(\"pnpm\")) {\r\n    return \"pnpm\";\r\n  }\r\n\r\n  return \"npm\";\r\n}\r\n\r\nexport function isInGitRepository(cwd?: string): boolean {\r\n  try {\r\n    execSync(\"git rev-parse --is-inside-work-tree\", { stdio: \"ignore\", cwd });\r\n    return true;\r\n  } catch (_) {}\r\n  return false;\r\n}\r\n\r\nfunction isInMercurialRepository(): boolean {\r\n  try {\r\n    execSync(\"hg --cwd . root\", { stdio: \"ignore\" });\r\n    return true;\r\n  } catch (_) {}\r\n  return false;\r\n}\r\n\r\nfunction isDefaultBranchSet(): boolean {\r\n  try {\r\n    execSync(\"git config init.defaultBranch\", { stdio: \"ignore\" });\r\n    return true;\r\n  } catch (_) {}\r\n  return false;\r\n}\r\n\r\nexport async function checkGitStatus(): Promise<\r\n  \"up-to-date\" | \"need-to-pull\" | \"need-to-push\" | \"diverged\" | \"error\"\r\n> {\r\n  try {\r\n    const cwd = __root;\r\n    const { stdout: local } = await execa(\"git\", [\"rev-parse\", \"@\"], { cwd });\r\n    const { stdout: remote } = await execa(\"git\", [\"rev-parse\", \"@{u}\"], {\r\n      cwd,\r\n    });\r\n    const { stdout: base } = await execa(\"git\", [\"merge-base\", \"@\", \"@{u}\"], {\r\n      cwd,\r\n    });\r\n\r\n    if (local === remote) {\r\n      return \"up-to-date\";\r\n    } else if (local === base) {\r\n      return \"need-to-pull\";\r\n    } else if (remote === base) {\r\n      return \"need-to-push\";\r\n    } else {\r\n      return \"diverged\";\r\n    }\r\n  } catch (e) {\r\n    return \"error\"\r\n  }\r\n}\r\n\r\nexport function tryGitInit(root: string): boolean {\r\n  let didInit = false;\r\n  try {\r\n    execSync(\"git --version\", { stdio: \"ignore\" });\r\n    if (isInGitRepository() || isInMercurialRepository()) {\r\n      return false;\r\n    }\r\n\r\n    execSync(\"git init\", { stdio: \"ignore\" });\r\n    didInit = true;\r\n\r\n    if (!isDefaultBranchSet()) {\r\n      execSync(\"git checkout -b main\", { stdio: \"ignore\" });\r\n    }\r\n\r\n    execSync(\"git add -A\", { stdio: \"ignore\" });\r\n    execSync('git commit -m \"Initial commit from Create AGL Template\"', {\r\n      stdio: \"ignore\",\r\n    });\r\n    return true;\r\n  } catch (e) {\r\n    if (didInit) {\r\n      try {\r\n        fs.rmSync(path.join(root, \".git\"), { recursive: true, force: true });\r\n      } catch (_) {}\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function validateNpmName(name: string): {\r\n  valid: boolean;\r\n  problems?: string[];\r\n} {\r\n  const nameValidation = validateProjectName(name);\r\n  if (nameValidation.validForNewPackages) {\r\n    return { valid: true };\r\n  }\r\n\r\n  return {\r\n    valid: false,\r\n    problems: [\r\n      ...(nameValidation.errors || []),\r\n      ...(nameValidation.warnings || []),\r\n    ],\r\n  };\r\n}\r\n","import fs from \"node:fs\";\r\nimport os from \"os\";\r\nimport pc from \"picocolors\";\r\nimport { PackageManager, copy } from \"@/src/utils\";\r\nimport path from \"path\";\r\nimport { fileURLToPath } from \"url\";\r\nimport { execa } from \"execa\";\r\n\r\ninterface InstallTemplateArgs {\r\n  appName: string;\r\n  root: string;\r\n  packageManager: PackageManager;\r\n  template: string;\r\n}\r\nexport async function installTemplate({\r\n  appName,\r\n  root,\r\n  packageManager,\r\n  template,\r\n}: InstallTemplateArgs) {\r\n  console.log(pc.bold(`Using ${packageManager}.`));\r\n\r\n  /**\r\n   * Copy the template files to the target directory.\r\n   */\r\n  console.log(\"\\nInitializing project with template:\", template);\r\n  const templatePath = path.join(\r\n    fileURLToPath(import.meta.url),\r\n    \"../..\",\r\n    \"template\",\r\n    template\r\n  );\r\n\r\n  const copySource = [\r\n    \"**\",\r\n    \"!package.json\",\r\n    \"!package-lock.json\",\r\n    \"!README.md\",\r\n  ];\r\n  await copy(copySource, root, {\r\n    parents: true,\r\n    cwd: templatePath,\r\n  });\r\n\r\n  // Write package.json\r\n  const pkg = JSON.parse(\r\n    fs.readFileSync(path.join(templatePath, `package.json`), \"utf-8\")\r\n  );\r\n\r\n  pkg.name = appName;\r\n\r\n  fs.writeFileSync(\r\n    path.join(root, \"package.json\"),\r\n    JSON.stringify(pkg, null, 2) + os.EOL\r\n  );\r\n\r\n  // Write README.md\r\n  let readme = fs.readFileSync(path.join(templatePath, `README.md`), \"utf-8\");\r\n  readme = readme\r\n    .replaceAll(\"[PACKAGE_MANAGER]\", packageManager)\r\n    .replaceAll(\"[RUN]\", packageManager === \"yarn\" ? \"\" : \"run \");\r\n\r\n  fs.writeFileSync(path.join(root, \"README.md\"), readme);\r\n\r\n  if (pkg.dependencies) {\r\n    console.log(\"\\nInstalling dependencies:\");\r\n    for (const dependency in pkg.dependencies)\r\n      console.log(`- ${pc.cyan(dependency)}`);\r\n  }\r\n\r\n  if (pkg.devDependencies) {\r\n    console.log(\"\\nInstalling devDependencies:\");\r\n    for (const dependency in pkg.devDependencies)\r\n      console.log(`- ${pc.cyan(dependency)}`);\r\n  }\r\n  console.log();\r\n\r\n  // Install dependencies.\r\n  await execa(packageManager, [\"install\"], {\r\n    stdio: \"inherit\",\r\n  });\r\n}\r\n"],"mappings":"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","names":["pc","Command","fs","path","prompts","package_default","path","pc","fg","pc","execSync","fs","path","validateProjectName","execa","fileURLToPath","__dirname","__root","isWriteable","directory","makeDir","root","options","copy","src","dest","cwd","rename","x","parents","source","ignore","sourceFiles","destRelativeToCwd","p","dirname","basename","from","to","isFolderEmpty","name","validFiles","conflicts","file","getPackageManager","userAgent","isInGitRepository","isInMercurialRepository","isDefaultBranchSet","checkGitStatus","local","remote","base","tryGitInit","didInit","validateNpmName","nameValidation","fs","os","pc","path","fileURLToPath","execa","installTemplate","appName","root","packageManager","template","pc","templatePath","copy","pkg","fs","os","readme","dependency","createApp","root","packageManager","template","appName","path","isWriteable","makeDir","isFolderEmpty","originalDirectory","useYarn","pc","installTemplate","tryGitInit","cdpath","error","isErrorLike","err","execa","ora","projectPath","handleSigTerm","onPromptState","state","program","Command","package_default","pc","name","reRun","userArgs","e","isNeededUpdate","checkGitStatus","cwd","__root","prompts","spinner","run","isInGitRepository","res","validation","validateNpmName","path","root","projectName","valid","problems","p","fs","isFolderEmpty","options","argTemplate","TEMPLATES","result","isValidTemplate","t","framework","frameworkColor","cancelled","template","selectedTemplate","packageManager","getPackageManager","createApp"]}